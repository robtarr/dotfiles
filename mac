#!/bin/bash

echo "Congrats on your new Mac! Let's get you setup, Rob"

echo "***********************"
echo "*   Installing Brew   *"
echo "***********************"
/bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
(echo; echo 'eval "$(/opt/homebrew/bin/brew shellenv)"') >> /Users/robtarr/.zprofile
    eval "$(/opt/homebrew/bin/brew shellenv)"

echo "**************************"
echo "*   Installing Formula   *"
echo "**************************"

brew install \
  caddy \
  difftastic \
  direnv \
  gh \
  git \
  git-extras \
  git-filter-repo \
  git-secrets \
  go \
  imagemagick \
  jq \
  mkcert \
  ngrok \
  nss \
  pure \
  shellcheck \
  sparkbox/brew/sb \
  tree \
  vim

echo "***************************"
echo "*   Installing Heroku CLI *"
echo "**************************"
brew tap heroku/brew && brew install heroku

echo "************************"
echo "*   Installing Casks   *"
echo "************************"
brew install --cask \
  1password \
  alfred \
  charles \
  docker \
  dropbox \
  figma \
  firefox \
  flotato \
  google-chrome \
  google-drive \
  gpg-suite-no-mail \
  grandperspective \
  iterm2 \
  kaleidoscope \
  karabiner-elements \
  keybase \
  microsoft-teams \
  moom \
  obs \
  postman \
  raspberry-pi-imager \
  rocket \
  slack \
  spotify \
  tableplus \
  ultimaker-cura \
  visual-studio-code \
  vlc \
  yubico-authenticator \
  zoom

echo "**************************************"
echo "*   I couldn't install these Casks   *"
echo "**************************************"
echo autodesk-fusion360 \
  awscli \
  harvest \
  terraform \
  ykman

brew tap homebrew/cask-fonts
brew install --cask font-fira-code

brew tap homebrew/cask-drivers
brew install --cask yubico-yubikey-manager

echo "************************"
echo "*   Install Devbox     *"
echo "************************"

curl -fsSL https://get.jetpack.io/devbox | bash

echo "*********************************"
echo "*   Fix Harvest Time Format     *"
echo "*********************************"
defaults write ~/Library/Containers/com.getharvest.harvestxapp/Data/Library/Preferences/group.com.getharvest.Harvest.Documents.plist TimeFormat hours_minutes

echo "************************"
echo "*   Setup Dotfiles     *"
echo "************************"
if [ ! -d ~/dotfiles ]; then
  git clone https://github.com/robtarr/dotfiles.git ~/dotfiles
fi

for link in .gitconfig .gitignore .gitmessage.txt .zshrc; do
  if [ -L "$HOME/$link" ]; then
    echo "Link '$link' exists"
  else
    ln -s "$HOME/dotfiles/$link" "$HOME/$link"
  fi
done

echo "*****************"
echo "*   Setup NVM   *"
echo "*****************"
curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.3/install.sh | bash

# NODE_VERSION=14 PROFILE=/dev/null sh -c "$(curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.38.0/install.sh)"

# export NVM_DIR="$HOME/.nvm"
# [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm

echo "*************************"
echo "*   Setup Nix & Lorri   *"
echo "*************************"
sh <(curl -L https://nixos.org/nix/install)
nix-env -i lorri

echo "**************************"
echo "*   Setup Particle CLI   *"
echo "**************************"
bash <( curl -sL https://particle.io/install-cli )

echo "**********************"
echo "*   App Store Apps   *"
echo "**********************"
echo ""
echo "https://apps.apple.com/us/app/trello/id1278508951?mt=12"

echo "*******************************"
echo "*   Removing the dock delay   *"
echo "*******************************"
echo ""
defaults write com.apple.Dock autohide-delay -float 0
killall Dock
# To restore to default
#   defaults delete com.apple.Dock autohide-delay
#   killall Dock